/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finalproject.finalproject;

import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author qazwsx922
 */
public class FoodCategories extends javax.swing.JFrame implements MouseListener {
    
    

    /**
     * Creates new form FoodCategories
     */
    public FoodCategories() {
        initComponents();
        BonelessWings.addMouseListener(this);
        OnionRings.addMouseListener(this);
        Mozzarella.addMouseListener(this);
        Tacos.addMouseListener(this);
        Pretzels.addMouseListener(this);
        Spinach.addMouseListener(this);
        Meatball.addMouseListener(this);
        C_Alfredo.addMouseListener(this);
        S_Alfredo.addMouseListener(this);
        Penne.addMouseListener(this);
        MacNCheese.addMouseListener(this);
        Carbonara.addMouseListener(this);
        S_TopSirloin.addMouseListener(this);
        E_TopSirloin.addMouseListener(this);
        ShrimpSirloin.addMouseListener(this);
        Riblet.addMouseListener(this);
        Bourbon.addMouseListener(this);
        DoubleRibs.addMouseListener(this);
        Lemonade.addMouseListener(this);
        OrangeJuice.addMouseListener(this);
        SoftDrinks.addMouseListener(this);
        Sundae.addMouseListener(this);
        CheeseCake.addMouseListener(this);
        Brownie.addMouseListener(this);
        
        
        
    }
    
    DefaultTableModel model = new DefaultTableModel();
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        Appetizer = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        MainDish = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Dessert = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        Drinks = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        AppetizerPanel = new javax.swing.JPanel();
        BonelessWings = new javax.swing.JLabel();
        OnionRings = new javax.swing.JLabel();
        Mozzarella = new javax.swing.JLabel();
        Tacos = new javax.swing.JLabel();
        Pretzels = new javax.swing.JLabel();
        Spinach = new javax.swing.JLabel();
        PastaPanel = new javax.swing.JPanel();
        Meatball = new javax.swing.JLabel();
        C_Alfredo = new javax.swing.JLabel();
        S_Alfredo = new javax.swing.JLabel();
        Penne = new javax.swing.JLabel();
        MacNCheese = new javax.swing.JLabel();
        Carbonara = new javax.swing.JLabel();
        SteaksPanel = new javax.swing.JPanel();
        S_TopSirloin = new javax.swing.JLabel();
        E_TopSirloin = new javax.swing.JLabel();
        ShrimpSirloin = new javax.swing.JLabel();
        Riblet = new javax.swing.JLabel();
        Bourbon = new javax.swing.JLabel();
        DoubleRibs = new javax.swing.JLabel();
        DrinksPanel = new javax.swing.JPanel();
        SoftDrinks = new javax.swing.JLabel();
        Lemonade = new javax.swing.JLabel();
        OrangeJuice = new javax.swing.JLabel();
        CheeseCake = new javax.swing.JLabel();
        Brownie = new javax.swing.JLabel();
        Sundae = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        setMaximumSize(new java.awt.Dimension(950, 580));
        setMinimumSize(new java.awt.Dimension(950, 580));
        setPreferredSize(new java.awt.Dimension(950, 580));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Appetizer.setBackground(new java.awt.Color(255, 255, 255));
        Appetizer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Appetizer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MouseExited(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("Appetizer");

        javax.swing.GroupLayout AppetizerLayout = new javax.swing.GroupLayout(Appetizer);
        Appetizer.setLayout(AppetizerLayout);
        AppetizerLayout.setHorizontalGroup(
            AppetizerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AppetizerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        AppetizerLayout.setVerticalGroup(
            AppetizerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AppetizerLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        getContentPane().add(Appetizer, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 130, -1));

        MainDish.setBackground(new java.awt.Color(255, 255, 255));
        MainDish.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        MainDish.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MouseExited(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel2.setText("Pasta");

        javax.swing.GroupLayout MainDishLayout = new javax.swing.GroupLayout(MainDish);
        MainDish.setLayout(MainDishLayout);
        MainDishLayout.setHorizontalGroup(
            MainDishLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainDishLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        MainDishLayout.setVerticalGroup(
            MainDishLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainDishLayout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(24, 24, 24))
        );

        getContentPane().add(MainDish, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 130, 90));

        Dessert.setBackground(new java.awt.Color(255, 255, 255));
        Dessert.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Dessert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MouseExited(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel3.setText("Steaks");

        javax.swing.GroupLayout DessertLayout = new javax.swing.GroupLayout(Dessert);
        Dessert.setLayout(DessertLayout);
        DessertLayout.setHorizontalGroup(
            DessertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DessertLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        DessertLayout.setVerticalGroup(
            DessertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DessertLayout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(26, 26, 26))
        );

        getContentPane().add(Dessert, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 130, 90));

        Drinks.setBackground(new java.awt.Color(255, 255, 255));
        Drinks.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Drinks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MouseExited(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel4.setText("Dessert&");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel6.setText("Drinks");

        javax.swing.GroupLayout DrinksLayout = new javax.swing.GroupLayout(Drinks);
        Drinks.setLayout(DrinksLayout);
        DrinksLayout.setHorizontalGroup(
            DrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DrinksLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        DrinksLayout.setVerticalGroup(
            DrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DrinksLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(Drinks, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 130, 90));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel5.setText("MENU");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, -1));

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Price", "Quantity", "Total_Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(5);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(18);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(32);
        }

        jButton1.setText("Remove");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel6.setLayout(new java.awt.CardLayout());

        AppetizerPanel.setBackground(new java.awt.Color(255, 255, 255));

        BonelessWings.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        BonelessWings.setText("Boneless Wings");
        BonelessWings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        OnionRings.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        OnionRings.setText("Onion Rings");
        OnionRings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        Mozzarella.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Mozzarella.setText("Mozzarella Sticks");
        Mozzarella.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        Tacos.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Tacos.setText("Chicken Tacos");
        Tacos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        Pretzels.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Pretzels.setText("Prestzels + Cheese Dip");
        Pretzels.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        Spinach.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Spinach.setText("Spinach + Artichoke Dip");
        Spinach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        javax.swing.GroupLayout AppetizerPanelLayout = new javax.swing.GroupLayout(AppetizerPanel);
        AppetizerPanel.setLayout(AppetizerPanelLayout);
        AppetizerPanelLayout.setHorizontalGroup(
            AppetizerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AppetizerPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(AppetizerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Spinach)
                    .addComponent(Pretzels)
                    .addComponent(Mozzarella)
                    .addComponent(OnionRings, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BonelessWings)
                    .addComponent(Tacos))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        AppetizerPanelLayout.setVerticalGroup(
            AppetizerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AppetizerPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(BonelessWings)
                .addGap(20, 20, 20)
                .addComponent(OnionRings)
                .addGap(20, 20, 20)
                .addComponent(Mozzarella)
                .addGap(20, 20, 20)
                .addComponent(Tacos)
                .addGap(20, 20, 20)
                .addComponent(Pretzels)
                .addGap(20, 20, 20)
                .addComponent(Spinach)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        jPanel6.add(AppetizerPanel, "card2");

        PastaPanel.setBackground(new java.awt.Color(255, 255, 255));

        Meatball.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Meatball.setText("Meatball & Spaghetti");
        Meatball.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        C_Alfredo.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        C_Alfredo.setText("Chicken Alfredo");
        C_Alfredo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        S_Alfredo.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        S_Alfredo.setText("Shrimp Alfredo");
        S_Alfredo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        Penne.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Penne.setText("Cheese Chicken Penne");
        Penne.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        MacNCheese.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        MacNCheese.setText("Mac&Cheese");
        MacNCheese.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        Carbonara.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Carbonara.setText("Carbonara");
        Carbonara.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        javax.swing.GroupLayout PastaPanelLayout = new javax.swing.GroupLayout(PastaPanel);
        PastaPanel.setLayout(PastaPanelLayout);
        PastaPanelLayout.setHorizontalGroup(
            PastaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PastaPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PastaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Carbonara)
                    .addComponent(C_Alfredo)
                    .addComponent(Meatball)
                    .addComponent(S_Alfredo)
                    .addComponent(Penne)
                    .addComponent(MacNCheese))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        PastaPanelLayout.setVerticalGroup(
            PastaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PastaPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(Meatball)
                .addGap(20, 20, 20)
                .addComponent(C_Alfredo)
                .addGap(20, 20, 20)
                .addComponent(S_Alfredo)
                .addGap(20, 20, 20)
                .addComponent(Penne)
                .addGap(20, 20, 20)
                .addComponent(MacNCheese)
                .addGap(20, 20, 20)
                .addComponent(Carbonara)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        jPanel6.add(PastaPanel, "card3");

        SteaksPanel.setBackground(new java.awt.Color(255, 255, 255));

        S_TopSirloin.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        S_TopSirloin.setText("6 OZ. Top Sirloin");
        S_TopSirloin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        E_TopSirloin.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        E_TopSirloin.setText("8 OZ. Top Sirloin");
        E_TopSirloin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        ShrimpSirloin.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        ShrimpSirloin.setText("Shrimp & Parmesan Sirloin");
        ShrimpSirloin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        Riblet.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Riblet.setText("Riblet Platter");
        Riblet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        Bourbon.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Bourbon.setText("Bourbon Street Steak");
        Bourbon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        DoubleRibs.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        DoubleRibs.setText("Double-Glazed Ribs");
        DoubleRibs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        javax.swing.GroupLayout SteaksPanelLayout = new javax.swing.GroupLayout(SteaksPanel);
        SteaksPanel.setLayout(SteaksPanelLayout);
        SteaksPanelLayout.setHorizontalGroup(
            SteaksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SteaksPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(SteaksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DoubleRibs)
                    .addComponent(E_TopSirloin)
                    .addComponent(S_TopSirloin)
                    .addComponent(ShrimpSirloin)
                    .addComponent(Riblet)
                    .addComponent(Bourbon))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        SteaksPanelLayout.setVerticalGroup(
            SteaksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SteaksPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(S_TopSirloin)
                .addGap(20, 20, 20)
                .addComponent(E_TopSirloin)
                .addGap(20, 20, 20)
                .addComponent(ShrimpSirloin)
                .addGap(20, 20, 20)
                .addComponent(Riblet)
                .addGap(20, 20, 20)
                .addComponent(Bourbon)
                .addGap(20, 20, 20)
                .addComponent(DoubleRibs)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        jPanel6.add(SteaksPanel, "card4");

        DrinksPanel.setBackground(new java.awt.Color(255, 255, 255));

        SoftDrinks.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        SoftDrinks.setText("Soft Drinks");
        SoftDrinks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        Lemonade.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Lemonade.setText("Lemonade");
        Lemonade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        OrangeJuice.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        OrangeJuice.setText("Orange Juice");
        OrangeJuice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        CheeseCake.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        CheeseCake.setText("Slice Cheese Cake");
        CheeseCake.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        Brownie.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Brownie.setText("Blue Ribbon Brownie");
        Brownie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        Sundae.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Sundae.setText("Chocolate Chip Sundae");
        Sundae.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        javax.swing.GroupLayout DrinksPanelLayout = new javax.swing.GroupLayout(DrinksPanel);
        DrinksPanel.setLayout(DrinksPanelLayout);
        DrinksPanelLayout.setHorizontalGroup(
            DrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DrinksPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(DrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Lemonade)
                    .addGroup(DrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(DrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Sundae)
                            .addComponent(CheeseCake)
                            .addComponent(OrangeJuice)
                            .addComponent(Brownie))
                        .addGroup(DrinksPanelLayout.createSequentialGroup()
                            .addComponent(SoftDrinks)
                            .addGap(142, 142, 142))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        DrinksPanelLayout.setVerticalGroup(
            DrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DrinksPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(SoftDrinks)
                .addGap(20, 20, 20)
                .addComponent(Lemonade)
                .addGap(20, 20, 20)
                .addComponent(OrangeJuice)
                .addGap(20, 20, 20)
                .addComponent(CheeseCake)
                .addGap(20, 20, 20)
                .addComponent(Brownie)
                .addGap(20, 20, 20)
                .addComponent(Sundae)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jPanel6.add(DrinksPanel, "card5");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(137, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(179, 179, 179))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 1070, 530));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MouseClicked
        // TODO add your handling code here:
        if(evt.getSource()==Appetizer){
            AppetizerPanel.setVisible(true);
            PastaPanel.setVisible(false);
            SteaksPanel.setVisible(false);
            DrinksPanel.setVisible(false);
        }
        if(evt.getSource()==MainDish){
            AppetizerPanel.setVisible(false);
            PastaPanel.setVisible(true);
            SteaksPanel.setVisible(false);
            DrinksPanel.setVisible(false);
        }
        if(evt.getSource()==Dessert){
            AppetizerPanel.setVisible(false);
            PastaPanel.setVisible(false);
            SteaksPanel.setVisible(true);
            DrinksPanel.setVisible(false);
        }
        if(evt.getSource()==Drinks){
            AppetizerPanel.setVisible(false);
            PastaPanel.setVisible(false);
            SteaksPanel.setVisible(false);
            DrinksPanel.setVisible(true);
        }
    }//GEN-LAST:event_MouseClicked

    private void MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MouseEntered
        // TODO add your handling code here:
        if(evt.getSource()==Appetizer){
            Appetizer.setBackground(new Color(238,238,238));
        }
        if(evt.getSource()==MainDish){
            MainDish.setBackground(new Color(238,238,238));
        }
        if(evt.getSource()==Dessert){
            Dessert.setBackground(new Color(238,238,238));
        }
        if(evt.getSource()==Drinks){
            Drinks.setBackground(new Color(238,238,238));
        }
        

    }//GEN-LAST:event_MouseEntered

    private void MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MouseExited
        // TODO add your handling code here:
        if(evt.getSource()==Appetizer){
            Appetizer.setBackground(new Color(255,255,255));
        }
        if(evt.getSource()==MainDish){
            MainDish.setBackground(new Color(255,255,255));
        }
        if(evt.getSource()==Dessert){
            Dessert.setBackground(new Color(255,255,255));
        }
        if(evt.getSource()==Drinks){
            Drinks.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_MouseExited
//     if(evt.getSource()==Pizza){
//            Pizza.setForeground(new Color(0,0,0));
//        }
//        if(evt.getSource()==Chicken){
//            Chicken.setForeground(new Color(0,0,0));
//        }
    }
    
    private void menuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMouseEntered
         if(evt.getSource()==BonelessWings){
            BonelessWings.setForeground(new Color(80,80,80));
        }
         if(evt.getSource()==OnionRings){
            OnionRings.setForeground(new Color(80,80,80));
        }
          if(evt.getSource()==Mozzarella){
            Mozzarella.setForeground(new Color(80,80,80));
        }
           if(evt.getSource()==Tacos){
            Tacos.setForeground(new Color(80,80,80));
        }
            if(evt.getSource()==Pretzels){
            Pretzels.setForeground(new Color(80,80,80));
        }
             if(evt.getSource()==Spinach){
            Spinach.setForeground(new Color(80,80,80));
        }
        
        if(evt.getSource()==Meatball){
            Meatball.setForeground(new Color(80,80,80));
        }
        if(evt.getSource()==C_Alfredo){
            C_Alfredo.setForeground(new Color(80,80,80));
        }
        if(evt.getSource()==S_Alfredo){
            S_Alfredo.setForeground(new Color(80,80,80));
        }
        if(evt.getSource()==Penne){
            Penne.setForeground(new Color(80,80,80));
        }
           if(evt.getSource()==MacNCheese){
            MacNCheese.setForeground(new Color(80,80,80));
        }
            if(evt.getSource()==Carbonara){
            Carbonara.setForeground(new Color(80,80,80));
        }
         if(evt.getSource()==S_TopSirloin){
            S_TopSirloin.setForeground(new Color(80,80,80));
        }
         if(evt.getSource()==E_TopSirloin){
            E_TopSirloin.setForeground(new Color(80,80,80));
        }
         if(evt.getSource()==ShrimpSirloin){
            ShrimpSirloin.setForeground(new Color(80,80,80));
        }
         if(evt.getSource()==Riblet){
            Riblet.setForeground(new Color(80,80,80));
        }
        if(evt.getSource()==Bourbon){
            Bourbon.setForeground(new Color(80,80,80));
        }
        if(evt.getSource()==DoubleRibs){
            DoubleRibs.setForeground(new Color(80,80,80));
        } 
        if(evt.getSource()==SoftDrinks){
            SoftDrinks.setForeground(new Color(80,80,80));
        }
        if(evt.getSource()==Lemonade){
            Lemonade.setForeground(new Color(80,80,80));
        }
        if(evt.getSource()==OrangeJuice){
            OrangeJuice.setForeground(new Color(80,80,80));
        }
        if(evt.getSource()==CheeseCake){
            CheeseCake.setForeground(new Color(80,80,80));
        }
        if(evt.getSource()==Brownie){
            Brownie.setForeground(new Color(80,80,80));
        }
        if(evt.getSource()==Sundae){
            Sundae.setForeground(new Color(80,80,80));
        }
        
// TODO add your handling code here:
    }//GEN-LAST:event_menuMouseEntered

    private void menuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMouseExited
        // TODO add your handling code here:
           if(evt.getSource()==BonelessWings){
            BonelessWings.setForeground(new Color(0,0,0));
        }
         if(evt.getSource()==OnionRings){
            OnionRings.setForeground(new Color(0,0,0));
        }
         if(evt.getSource()==Mozzarella){
            Mozzarella.setForeground(new Color(0,0,0));
        }
         if(evt.getSource()==Tacos){
            Tacos.setForeground(new Color(0,0,0));
        }
         if(evt.getSource()==Pretzels){
            Pretzels.setForeground(new Color(0,0,0));
        }
         if(evt.getSource()==Spinach){
            Spinach.setForeground(new Color(0,0,0));
        }
           if(evt.getSource()==Meatball){
            Meatball.setForeground(new Color(0,0,0));
        }
        if(evt.getSource()==C_Alfredo){
            C_Alfredo.setForeground(new Color(0,0,0));
        }
        if(evt.getSource()==S_Alfredo){
            S_Alfredo.setForeground(new Color(0,0,0));
        }
        if(evt.getSource()==Penne){
            Penne.setForeground(new Color(0,0,0));
        }
           if(evt.getSource()==MacNCheese){
            MacNCheese.setForeground(new Color(0,0,0));
        }
            if(evt.getSource()==Carbonara){
            Carbonara.setForeground(new Color(0,0,0));
        }
         if(evt.getSource()==S_TopSirloin){
            S_TopSirloin.setForeground(new Color(0,0,0));
        }
        if(evt.getSource()==E_TopSirloin){
            E_TopSirloin.setForeground(new Color(0,0,0));
        }
         if(evt.getSource()==ShrimpSirloin){
            ShrimpSirloin.setForeground(new Color(0,0,0));
        }
         if(evt.getSource()==Riblet){
            Riblet.setForeground(new Color(0,0,0));
        }
        if(evt.getSource()==Bourbon){
            Bourbon.setForeground(new Color(0,0,0));
        }
        if(evt.getSource()==DoubleRibs){
            DoubleRibs.setForeground(new Color(0,0,0));
        }  
         if(evt.getSource()==SoftDrinks){
            SoftDrinks.setForeground(new Color(0,0,0));
        }
         if(evt.getSource()==Lemonade){
            Lemonade.setForeground(new Color(0,0,0));
        }
        if(evt.getSource()==OrangeJuice){
            OrangeJuice.setForeground(new Color(0,0,0));
        }
        if(evt.getSource()==CheeseCake){
            CheeseCake.setForeground(new Color(0,0,0));
        }
        if(evt.getSource()==Brownie){
            Brownie.setForeground(new Color(0,0,0));
        }
        if(evt.getSource()==Sundae){
            Sundae.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_menuMouseExited

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            int selectedRowIndex = jTable1.getSelectedRow();
            model.removeRow(selectedRowIndex);
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
        
    
   
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Appetizer;
    private javax.swing.JPanel AppetizerPanel;
    private javax.swing.JLabel BonelessWings;
    private javax.swing.JLabel Bourbon;
    private javax.swing.JLabel Brownie;
    private javax.swing.JLabel C_Alfredo;
    private javax.swing.JLabel Carbonara;
    private javax.swing.JLabel CheeseCake;
    private javax.swing.JPanel Dessert;
    private javax.swing.JLabel DoubleRibs;
    private javax.swing.JPanel Drinks;
    private javax.swing.JPanel DrinksPanel;
    private javax.swing.JLabel E_TopSirloin;
    private javax.swing.JLabel Lemonade;
    private javax.swing.JLabel MacNCheese;
    private javax.swing.JPanel MainDish;
    private javax.swing.JLabel Meatball;
    private javax.swing.JLabel Mozzarella;
    private javax.swing.JLabel OnionRings;
    private javax.swing.JLabel OrangeJuice;
    private javax.swing.JPanel PastaPanel;
    private javax.swing.JLabel Penne;
    private javax.swing.JLabel Pretzels;
    private javax.swing.JLabel Riblet;
    private javax.swing.JLabel S_Alfredo;
    private javax.swing.JLabel S_TopSirloin;
    private javax.swing.JLabel ShrimpSirloin;
    private javax.swing.JLabel SoftDrinks;
    private javax.swing.JLabel Spinach;
    private javax.swing.JPanel SteaksPanel;
    private javax.swing.JLabel Sundae;
    private javax.swing.JLabel Tacos;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        
        if(e.getSource()== BonelessWings){
            String name = "BonlessWings";
            int price = 10;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
            else if(e.getSource()== OnionRings){
            String name = "OnionRings";
            int price = 8;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
            else if(e.getSource()== Mozzarella){
            String name = "MozzarellaSticks";
            int price = 6;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
            else if(e.getSource()== Tacos){
            String name = "ChickenTacos";
            int price = 8;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
            else if(e.getSource()== Pretzels){
            String name = "Pretzels";
            int price = 14;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
            else if(e.getSource()== Spinach){
            String name = "Spinach";
            int price = 12;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
            
            else if(e.getSource()== Meatball){
            String name = "MeatballSpaghetti";
            int price = 15;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
            else if(e.getSource()== C_Alfredo){
            String name = "ChickenAlfredo";
            int price = 12;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
            else if(e.getSource()== S_Alfredo){
            String name = "ShrimpAlfredo";
            int price = 12;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
            else if(e.getSource()== Penne){
            String name = "Penne";
            int price = 13;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
            else if(e.getSource()== MacNCheese){
            String name = "MacNCheese";
            int price = 11;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
            else if(e.getSource()== Carbonara){
            String name = "Carbonara";
            int price = 13;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
             
            else if(e.getSource()== S_TopSirloin){
            String name = "6OZ TopSirloin";
            int price = 20;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
            else if(e.getSource()== E_TopSirloin){
            String name = "8OZ TopSirloin";
            int price = 22;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
            else if(e.getSource()== ShrimpSirloin){
            String name = "ShrimpSirloin";
            int price = 24;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
            else if(e.getSource()== Riblet){
            String name = "Riblet";
            int price = 19;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
            else if(e.getSource()== Bourbon){
            String name = "Bourbon";
            int price = 20;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
            else if(e.getSource()== DoubleRibs){
            String name = "DoubleRibs";
            int price = 22;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
        else if(e.getSource()== SoftDrinks){
            String name = "SoftDrinks";
            int price = 2;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
        else if(e.getSource()== Lemonade){
            String name = "Lemonade";
            int price = 4;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
        else if(e.getSource()== OrangeJuice){
            String name = "OrnageJuice";
            int price = 4;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
        else if(e.getSource()== CheeseCake){
            String name = "CheeseCake";
            int price = 5;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
        else if(e.getSource()== Brownie){
            String name = "Brownie";
            int price = 12;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }
        else if(e.getSource()== Sundae){
            String name = "Sundae";
            int price = 15;
            int quantity = Integer.parseInt((JOptionPane.showInputDialog("Enter the quantity")));
            int total_Price = price * quantity;
            
            model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{
                name,
                price,
                quantity,
                total_Price
            });
            
        }

        
        
        //To change body of generated methods, choose Tools | Templates.
    }
    
   

    @Override
    public void mousePressed(MouseEvent e) {
         //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseReleased(MouseEvent e) {
         //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseEntered(MouseEvent e) {
         //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseExited(MouseEvent arg0) {
        //To change body of generated methods, choose Tools | Templates.
    }
}
